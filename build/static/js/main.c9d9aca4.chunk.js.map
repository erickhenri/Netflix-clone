{"version":3,"sources":["Tmdb.js","components/MovieRow/index.js","components/FeaturedMovie/index.js","components/Header/index.js","App.js","index.js"],"names":["API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","style","fontSize","listw","results","length","marginLeft","width","map","item","key","src","poster_path","alt","original_title","firstDate","Date","first_air_date","genres","i","push","name","description","overview","substring","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","href","id","join","black","movieList","setMovieList","featuredData","setFeaturedData","blackHeader","setBlackHeader","useEffect","loadAll","Tmdb","list","originals","filter","randomChosen","floor","random","chosen","chosenInfo","scrollLisneter","scrollY","addEventListener","removeEventListener","role","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9d9aca4.chunk.js","sourcesContent":["const API_KEY = '551a0f783de653e16b1e64297c8d1c33';\nconst API_BASE = 'https://api.themoviedb.org/3';\n\nconst basicFetch = async (endpoint) => {\n  const req = await fetch(`${API_BASE}${endpoint}`);\n  const json = await req.json();\n  return json;\n}\n\nexport default {\n  getHomeList: async () => {\n    return [\n      {\n        slug: 'originals',\n        title: 'Originais do Netflix',\n        items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`),\n      },\n      {\n        slug: 'trending',\n        title: 'Recomendados para você',\n        items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`),\n      },\n      {\n        slug: 'toprated',\n        title: 'Em alta',\n        items: await basicFetch(`/movie/top_rated?languase=pt-BR&api_key=${API_KEY}`),\n      },\n      {\n        slug: 'action',\n        title: 'Ação',\n        items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`),\n      },\n      {\n        slug: 'comedy',\n        title: 'Comédia',\n        items:  await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`),\n      },\n      {\n        slug: 'horror',\n        title: 'Terror',\n        items:  await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`),\n      },\n      {\n        slug: 'romance',\n        title: 'Romance',\n        items:  await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`),\n      },\n      {\n        slug: 'documentary',\n        title: 'Documentário',\n        items:  await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`),\n      },\n      \n    ];\n  },\n  getMovieInfo: async (movieId, type) => {\n    let info = {};\n\n    if(movieId) {\n      switch(type) {\n        case 'movie':\n          info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\n        break;\n        case 'tv':\n          info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\n        break;\n        default:\n          info = null;\n        break;\n      }\n    }\n\n    return info;\n  }\n}","import React, {useState} from 'react';\nimport './MovieRow.css';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore'; \nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nexport default ({title, items}) => {\n  const [scrollX, setScrollX] = useState(-400);\n\n  const handleLeftArrow = () => {\n    let x = scrollX + Math.round(window.innerWidth/2);\n    if(x > 0) {\n      x = 0;\n    }\n    setScrollX(x);\n  }\n\n  const handleRightArrow = () => {\n    let x = scrollX - Math.round(window.innerWidth/2);\n    let listw = items.results.length * 150;\n    if((window.innerWidth - listw) > x) {\n      x = (window.innerWidth - listw) - 60;\n    }\n    setScrollX(x);\n  }\n  \n  return (\n  <div className=\"movieRow\">\n    <h2>{title}</h2>\n    <div className=\"movieRow-left\" onClick={handleLeftArrow}>\n      <NavigateBeforeIcon style={{fontSize: 50}}/>\n    </div>\n    <div className=\"movieRow-right\" onClick={handleRightArrow}>\n      <NavigateNextIcon style={{fontSize: 50}}/>\n    </div>\n\n    <div className=\"movieRow-listarea\">\n      <div className=\"movieRow-list\" style={{\n        marginLeft: scrollX,\n        width: items.results.length * 150,\n      }}>\n      {items.results.length > 0 && items.results.map((item, key)=>(\n        <div key={key} className=\"movieRow-item\">\n          <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title}></img>\n        </div>\n        ))}\n\n      </div>\n    </div>\n  </div>\n  );\n}","import React from 'react';\nimport './FeaturedMovie.css';\n\nexport default ({item}) => {\n\n  let firstDate = new Date(item.first_air_date);\n  let genres = [];\n  for(let i in item.genres) {\n    genres.push(item.genres[i].name);\n  }\n\n  let description = item.overview;\n  if(description.length > 300) {\n    description = description.substring(0,300)+'...';\n  }\n\n  return (\n    <section className=\"featured\" style={{\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\n    }}>\n      <div className=\"featured-vertical\">\n        <div className=\"featured-horizontal\">\n          <div className=\"featured-name\">{item.original_name}</div>\n          <div className=\"featured-info\">\n            <div className=\"featured-points\">{item.vote_average} ponto{item.vote_average !== 1 ? 's' : ''}</div>\n            <div className=\"featured-year\">{firstDate.getFullYear()}</div> \n            <div className=\"featured-seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\n          </div>\n          <div className=\"featured-description\">{description}</div>\n          <div className=\"featured-buttons\">\n            <a href={`/watch/${item.id}`} className=\"featured-watchbutton\">► Assistir</a>\n            <a href={`/list/add/${item.id}`} className=\"featured-mylistbutton\">+ Minha Lista</a>\n          </div>\n          <div className=\"featured-genres\"><strong>Gêneros:</strong> {genres.join(', ')}</div>  \n        </div>\n      </div>\n    </section>\n  );\n}","import React from 'react';\nimport './Header.css';\n\nexport default ({black}) => {\n  return (\n    <header className={black ? 'black' : ''}>\n      <div className=\"header-logo\">\n        <a href=\"/\">\n          <img src=\"https://fontmeme.com/permalink/211106/b984f4042d72ae3a3a0b9f4e0b1e990b.png\" href=\"Netflix\"></img>\n        </a>\n      </div>\n      <div className=\"header-user\">\n        <a href=\"/\">\n          <img src=\"https://ih0.redbubble.net/image.618427277.3222/flat,1000x1000,075,f.u2.jpg\" alt=\"Usuário\" />\n        </a>\n      </div>\n    </header>\n  );\n}\n","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport FeaturedMovie from './components/FeaturedMovie';\nimport Header from './components/Header';\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n  useEffect(()=>{\n    const loadAll = async () => {\n      //Pegando a lista total\n      let list = await Tmdb.getHomeList();\n     setMovieList(list);\n     \n      //Pegando o Featured\n      let originals = list.filter(i=>i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length -1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n    }\n    \n    loadAll();\n  }, []);\n\n  useEffect(() => {\n    const scrollLisneter = () => {\n      if(window.scrollY > 20) {\n        setBlackHeader(true);\n      } else {\n        setBlackHeader(false);\n      }\n    }\n\n    window.addEventListener('scroll', scrollLisneter);\n    return () => {\n      window.removeEventListener('scroll', scrollLisneter);\n    }\n  }, []);  \n\n  return(\n    <div className=\"page\">\n\n      <Header black={blackHeader}/>\n\n      {featuredData &&\n        <FeaturedMovie item={featuredData} />\n      }\n\n      <section className=\"lists\">\n        {movieList.map((item, key)=>(\n           <MovieRow key={key} title={item.title} items={item.items} />\n        ))}\n      </section>\n      <footer>\n        Feito com <span role=\"img\" arial-label=\"coração\">❤️</span> por Nodlick<br/>\n        Direitos de imagens para netflix<br/>\n        Dados pegos pelo site Themoviedb.org<br/>\n        Feito graças ao professor Bonieky Lacerda.\n      </footer>\n      {movieList.length <=0 &&\n        <div className=\"loading\">\n          <img src=\"https://www.rchandru.com/images/portfolio/loading.gif\" alt=\"Carregando\"></img>\n        </div>\n      }\n    </div>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}