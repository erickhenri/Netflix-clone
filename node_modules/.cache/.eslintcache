[{"/home/erick/Documentos/Programas/netflix/netflixclone/src/index.js":"1","/home/erick/Documentos/Programas/netflix/netflixclone/src/App.js":"2","/home/erick/Documentos/Programas/netflix/netflixclone/src/Tmdb.js":"3","/home/erick/Documentos/Programas/netflix/netflixclone/src/components/MovieRow/index.js":"4","/home/erick/Documentos/Programas/netflix/netflixclone/src/components/Header/index.js":"5","/home/erick/Documentos/Programas/netflix/netflixclone/src/components/FeaturedMovie/index.js":"6"},{"size":198,"mtime":1636152353769,"results":"7","hashOfConfig":"8"},{"size":2096,"mtime":1636229199346,"results":"9","hashOfConfig":"8"},{"size":2138,"mtime":1636208532668,"results":"10","hashOfConfig":"8"},{"size":1454,"mtime":1636227887117,"results":"11","hashOfConfig":"8"},{"size":557,"mtime":1636219793695,"results":"12","hashOfConfig":"8"},{"size":1570,"mtime":1636230585986,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"q9vkqo",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"/home/erick/Documentos/Programas/netflix/netflixclone/src/index.js",[],["32","33"],"/home/erick/Documentos/Programas/netflix/netflixclone/src/App.js",["34"],"import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport FeaturedMovie from './components/FeaturedMovie';\nimport Header from './components/Header';\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n  useEffect(()=>{\n    const loadAll = async () => {\n      //Pegando a lista total\n      let list = await Tmdb.getHomeList();\n     setMovieList(list);\n     \n      //Pegando o Featured\n      let originals = list.filter(i=>i.slug === 'originals');\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length -1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n    }\n    \n    loadAll();\n  }, []);\n\n  useEffect(() => {\n    const scrollLisneter = () => {\n      if(window.scrollY > 20) {\n        setBlackHeader(true);\n      } else {\n        setBlackHeader(false);\n      }\n    }\n\n    window.addEventListener('scroll', scrollLisneter);\n    return () => {\n      window.removeEventListener('scroll', scrollLisneter);\n    }\n  }, []);  \n\n  return(\n    <div className=\"page\">\n\n      <Header black={blackHeader}/>\n\n      {featuredData &&\n        <FeaturedMovie item={featuredData} />\n      }\n\n      <section className=\"lists\">\n        {movieList.map((item, key)=>(\n           <MovieRow key={key} title={item.title} items={item.items} />\n        ))}\n      </section>\n      <footer>\n        Feito com <span role=\"img\" arial-label=\"coração\">❤️</span> por Nodlick<br/>\n        Direitos de imagens para netflix<br/>\n        Dados pegos pelo site Themoviedb.org<br/>\n        Feito graças ao professor Bonieky Lacerda.\n      </footer>\n      {movieList.length <=0 &&\n        <div className=\"loading\">\n          <img src=\"https://www.rchandru.com/images/portfolio/loading.gif\" alt=\"Carregando\"></img>\n        </div>\n      }\n    </div>\n  )\n}","/home/erick/Documentos/Programas/netflix/netflixclone/src/Tmdb.js",["35"],"const API_KEY = '551a0f783de653e16b1e64297c8d1c33';\nconst API_BASE = 'https://api.themoviedb.org/3';\n\nconst basicFetch = async (endpoint) => {\n  const req = await fetch(`${API_BASE}${endpoint}`);\n  const json = await req.json();\n  return json;\n}\n\nexport default {\n  getHomeList: async () => {\n    return [\n      {\n        slug: 'originals',\n        title: 'Originais do Netflix',\n        items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`),\n      },\n      {\n        slug: 'trending',\n        title: 'Recomendados para você',\n        items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`),\n      },\n      {\n        slug: 'toprated',\n        title: 'Em alta',\n        items: await basicFetch(`/movie/top_rated?languase=pt-BR&api_key=${API_KEY}`),\n      },\n      {\n        slug: 'action',\n        title: 'Ação',\n        items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`),\n      },\n      {\n        slug: 'comedy',\n        title: 'Comédia',\n        items:  await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`),\n      },\n      {\n        slug: 'horror',\n        title: 'Terror',\n        items:  await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`),\n      },\n      {\n        slug: 'romance',\n        title: 'Romance',\n        items:  await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`),\n      },\n      {\n        slug: 'documentary',\n        title: 'Documentário',\n        items:  await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`),\n      },\n      \n    ];\n  },\n  getMovieInfo: async (movieId, type) => {\n    let info = {};\n\n    if(movieId) {\n      switch(type) {\n        case 'movie':\n          info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\n        break;\n        case 'tv':\n          info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\n        break;\n        default:\n          info = null;\n        break;\n      }\n    }\n\n    return info;\n  }\n}","/home/erick/Documentos/Programas/netflix/netflixclone/src/components/MovieRow/index.js",["36"],"import React, {useState} from 'react';\nimport './MovieRow.css';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore'; \nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nexport default ({title, items}) => {\n  const [scrollX, setScrollX] = useState(-400);\n\n  const handleLeftArrow = () => {\n    let x = scrollX + Math.round(window.innerWidth/2);\n    if(x > 0) {\n      x = 0;\n    }\n    setScrollX(x);\n  }\n\n  const handleRightArrow = () => {\n    let x = scrollX - Math.round(window.innerWidth/2);\n    let listw = items.results.length * 150;\n    if((window.innerWidth - listw) > x) {\n      x = (window.innerWidth - listw) - 60;\n    }\n    setScrollX(x);\n  }\n  \n  return (\n  <div className=\"movieRow\">\n    <h2>{title}</h2>\n    <div className=\"movieRow-left\" onClick={handleLeftArrow}>\n      <NavigateBeforeIcon style={{fontSize: 50}}/>\n    </div>\n    <div className=\"movieRow-right\" onClick={handleRightArrow}>\n      <NavigateNextIcon style={{fontSize: 50}}/>\n    </div>\n\n    <div className=\"movieRow-listarea\">\n      <div className=\"movieRow-list\" style={{\n        marginLeft: scrollX,\n        width: items.results.length * 150,\n      }}>\n      {items.results.length > 0 && items.results.map((item, key)=>(\n        <div key={key} className=\"movieRow-item\">\n          <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title}></img>\n        </div>\n        ))}\n\n      </div>\n    </div>\n  </div>\n  );\n}","/home/erick/Documentos/Programas/netflix/netflixclone/src/components/Header/index.js",["37","38"],"import React from 'react';\nimport './Header.css';\n\nexport default ({black}) => {\n  return (\n    <header className={black ? 'black' : ''}>\n      <div className=\"header-logo\">\n        <a href=\"/\">\n          <img src=\"https://fontmeme.com/permalink/211106/b984f4042d72ae3a3a0b9f4e0b1e990b.png\" href=\"Netflix\"></img>\n        </a>\n      </div>\n      <div className=\"header-user\">\n        <a href=\"/\">\n          <img src=\"https://ih0.redbubble.net/image.618427277.3222/flat,1000x1000,075,f.u2.jpg\" alt=\"Usuário\" />\n        </a>\n      </div>\n    </header>\n  );\n}\n","/home/erick/Documentos/Programas/netflix/netflixclone/src/components/FeaturedMovie/index.js",["39"],"import React from 'react';\nimport './FeaturedMovie.css';\n\nexport default ({item}) => {\n\n  let firstDate = new Date(item.first_air_date);\n  let genres = [];\n  for(let i in item.genres) {\n    genres.push(item.genres[i].name);\n  }\n\n  let description = item.overview;\n  if(description.length > 300) {\n    description = description.substring(0,300)+'...';\n  }\n\n  return (\n    <section className=\"featured\" style={{\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\n    }}>\n      <div className=\"featured-vertical\">\n        <div className=\"featured-horizontal\">\n          <div className=\"featured-name\">{item.original_name}</div>\n          <div className=\"featured-info\">\n            <div className=\"featured-points\">{item.vote_average} ponto{item.vote_average !== 1 ? 's' : ''}</div>\n            <div className=\"featured-year\">{firstDate.getFullYear()}</div> \n            <div className=\"featured-seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\n          </div>\n          <div className=\"featured-description\">{description}</div>\n          <div className=\"featured-buttons\">\n            <a href={`/watch/${item.id}`} className=\"featured-watchbutton\">► Assistir</a>\n            <a href={`/list/add/${item.id}`} className=\"featured-mylistbutton\">+ Minha Lista</a>\n          </div>\n          <div className=\"featured-genres\"><strong>Gêneros:</strong> {genres.join(', ')}</div>  \n        </div>\n      </div>\n    </section>\n  );\n}",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":8,"column":1,"nodeType":"46","endLine":72,"endColumn":2},{"ruleId":"44","severity":1,"message":"47","line":10,"column":1,"nodeType":"46","endLine":75,"endColumn":2},{"ruleId":"44","severity":1,"message":"45","line":6,"column":1,"nodeType":"46","endLine":51,"endColumn":2},{"ruleId":"44","severity":1,"message":"45","line":4,"column":1,"nodeType":"46","endLine":19,"endColumn":2},{"ruleId":"48","severity":1,"message":"49","line":9,"column":11,"nodeType":"50","endLine":9,"endColumn":112},{"ruleId":"44","severity":1,"message":"45","line":4,"column":1,"nodeType":"46","endLine":41,"endColumn":2},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]